-- This document includes a collection of queries used in understanding assignment process


-- Query 0: Simplified Assignment Outcome
-- This tab shows the outcome of assignment for each run, including status, assigned shift and score, etc.
SELECT
    dca.delivery_id
    , dca.ASSIGNMENT_RUN_ID
    , dd.CREATED_AT as delivery_created_at
    , dca.EVENT_CREATED_AT
    , dca.ORDER_READY_TIME::timestamp as ORT
    , dca.ESTIMATED_DELIVERY_TIME::timestamp as EDT
    , dd.quoted_delivery_time as QDT
    , CASE WHEN not dca.IS_TIME_TO_ASSIGN THEN 'not_time_to_assign'
      WHEN cds.TENTATIVE_ASSIGN = TRUE THEN 'tentative_assign'
      WHEN cds.delivery_package_size >= 2 THEN 'published_assign_packaged'
      WHEN cds.ROUTE_IS_SAME_STORE_BATCH THEN 'published_assign_same_store_batch'
      WHEN fd.ASSIGNMENT_RUN_ID is not null and fd.is_pred_wait = TRUE THEN 'future_dx_pred_wait'
      WHEN fd.ASSIGNMENT_RUN_ID is not null THEN 'future_dx_assign'
      ELSE 'published_assign' END AS outcome_category
    , cds.SHIFT_ID as assigned_shift
    , coalesce(cds.COMPOSITE_SCORE, fd.COMPOSITE_SCORE) as COMPOSITE_SCORE
    , RANK() OVER (PARTITION BY dca.delivery_id ORDER BY dca.event_created_at ASC) AS assignment_run_order
FROM IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_DELIVERY_CONSIDERED_FOR_ASSIGNMENT_EVENT dca
left join dimension_deliveries dd
    on dca.DELIVERY_ID = dd.DELIVERY_ID
    and dd.is_filtered
    and dd.CREATED_AT between '{{window_start}}' AND '{{window_end}}'
    and dd.DELIVERY_ID IN ({{delivery_id}})
left join IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_CONSIDERED_DELIVERY_STATS cds
    on dca.DELIVERY_ID = cds.DELIVERY_ID
    and dca.ASSIGNMENT_RUN_ID = cds.ASSIGNMENT_RUN_ID
    and cds.EVENT_CREATED_AT between '{{window_start}}' AND '{{window_end}}'
    and cds.is_prod
    and cds.DELIVERY_ID IN ({{delivery_id}})
LEFT JOIN IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_FUTURE_DASHER_EVENT fd
    ON fd.is_prod
    AND fd.event_created_at between '{{window_start}}' AND '{{window_end}}'
    AND fd.assignment_run_id = dca.assignment_run_id
    AND fd.DELIVERY_ID = dca.DELIVERY_ID
    and fd.is_prod
    and fd.IS_MATCHED
    and fd.DELIVERY_ID IN ({{delivery_id}})
WHERE dca.EVENT_CREATED_AT between '{{window_start}}' AND '{{window_end}}'
    and dca.on_manual_assign = false
    AND dca.is_prod
    and (dca.is_time_to_assign = true or dca.is_time_to_assign is null)
    and dca.DELIVERY_ID IN ({{delivery_id}})
order by EVENT_CREATED_AT desc


-- Query 1: Assignment Outcome
-- This tab shows the outcome of assignment for each run, including status, assigned shift and score, etc.
SELECT
    dca.delivery_id
    , dca.ASSIGNMENT_RUN_ID
    , dd.CREATED_AT as delivery_created_at
    , dca.EVENT_CREATED_AT
    , dca.ORDER_READY_TIME::timestamp as ORT
    , dca.ESTIMATED_DELIVERY_TIME::timestamp as EDT
    , dd.quoted_delivery_time as QDT
    , CASE WHEN not dca.IS_TIME_TO_ASSIGN THEN 'not_time_to_assign'
      WHEN cds.TENTATIVE_ASSIGN = TRUE AND cds.IS_SEMI_IDLE_DASHER_ASSIGNMENT THEN 'tentative_assign_semi_idle'
      WHEN cds.TENTATIVE_ASSIGN = TRUE AND cds.IS_BATCH_WITH_DELIVERY_APPEND THEN 'tentative_assign_append_batch'
      WHEN cds.TENTATIVE_ASSIGN = TRUE AND das.is_idle_shift = TRUE THEN 'tentative_assign_idle_dx'
      WHEN cds.TENTATIVE_ASSIGN = TRUE AND das.is_idle_shift = FALSE THEN 'tentative_assign_busy_dx'
      WHEN cds.TENTATIVE_ASSIGN = TRUE AND cds.SHOULD_DELAY_DASHER_ASSIGNMENT = true THEN 'tentative_assign_long_wait'
      WHEN cds.delivery_package_size >= 2 THEN 'published_assign_packaged'
      WHEN cds.ROUTE_IS_SAME_STORE_BATCH THEN 'published_assign_same_store_batch'
      WHEN fd.ASSIGNMENT_RUN_ID is not null and fd.is_pred_wait = TRUE THEN 'future_dx_pred_wait'
      WHEN fd.ASSIGNMENT_RUN_ID is not null THEN 'future_dx_assign'
      ELSE 'published_assign' END AS outcome_category
    , cds.SHIFT_ID as assigned_shift
    , coalesce(cds.COMPOSITE_SCORE, fd.COMPOSITE_SCORE) as COMPOSITE_SCORE
    , RANK() OVER (PARTITION BY dca.delivery_id ORDER BY dca.event_created_at ASC) AS assignment_run_order
FROM IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_DELIVERY_CONSIDERED_FOR_ASSIGNMENT_EVENT dca
left join dimension_deliveries dd
    on dca.DELIVERY_ID = dd.DELIVERY_ID
    and dd.is_filtered
    and dd.CREATED_AT between '{{window_start}}' AND '{{window_end}}'
    and dd.DELIVERY_ID IN ({{delivery_id}})
left join IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_CONSIDERED_DELIVERY_STATS cds
    on dca.DELIVERY_ID = cds.DELIVERY_ID
    and dca.ASSIGNMENT_RUN_ID = cds.ASSIGNMENT_RUN_ID
    and cds.EVENT_CREATED_AT between '{{window_start}}' AND '{{window_end}}'
    and cds.is_prod
    and cds.DELIVERY_ID IN ({{delivery_id}})
LEFT JOIN IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_ALLSHIFT das
    ON das.is_prod
    AND das.event_created_at between '{{window_start}}' AND '{{window_end}}'
    AND das.shift_id = cds.shift_id
    AND das.assignment_run_id = cds.assignment_run_id
LEFT JOIN IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_FUTURE_DASHER_EVENT fd
    ON fd.is_prod
    AND fd.event_created_at between '{{window_start}}' AND '{{window_end}}'
    AND fd.assignment_run_id = dca.assignment_run_id
    AND fd.DELIVERY_ID = dca.DELIVERY_ID
    and fd.is_prod
    and fd.IS_MATCHED
    and fd.DELIVERY_ID IN ({{delivery_id}})
WHERE dca.EVENT_CREATED_AT between '{{window_start}}' AND '{{window_end}}'
    and dca.on_manual_assign = false
    AND dca.is_prod
    and (dca.is_time_to_assign = true or dca.is_time_to_assign is null)
    and dca.DELIVERY_ID IN ({{delivery_id}})
order by EVENT_CREATED_AT desc


-- Query 2: Delivery Flow
-- This tab is intended to investigate when the delivery has reached to different stages of assignment and why
with dca as (
select *
from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_DELIVERY_CONSIDERED_FOR_ASSIGNMENT_EVENT dca
where is_prod
and event_created_at between '{{window_start}}' and '{{window_end}}'
and DELIVERY_ID in ({{delivery_id}})
)

select dca.event_created_at, dca.delivery_id, dca.ASSIGNMENT_RUN_ID
, count(distinct dca.DELIVERY_ID) as num_deliv_in_dca
, count(distinct case when dca.IS_TIME_TO_ASSIGN then dca.DELIVERY_ID else null end) as num_tta_deliv_in_dca
, count(distinct isc.delivery_package_ids) as num_packages_in_isc
, count(distinct isc.SHIFT_ID) as num_shifts_in_isc
, count(distinct case when isc.is_shift_busy then isc.SHIFT_ID else null end) as num_busy_shifts_in_isc
, count(distinct case when isc.IS_SEMI_IDLE_DASHER then isc.SHIFT_ID else null end) as num_semi_idle_shifts_in_isc
, count(distinct isc.delivery_package_ids, isc.SHIFT_ID) as num_candidates_in_isc
, count(distinct oca.delivery_package_ids) as num_packages_in_oca
, count(distinct oca.SHIFT_ID) as num_shifts_in_ocas
, count(distinct case when oca.IS_SEMI_IDLE_DASHER then oca.SHIFT_ID else null end) as num_semi_idle_shifts_in_oca
, count(distinct oca.delivery_package_ids, oca.SHIFT_ID) as num_candidates_in_oca
, count(distinct fde.DELIVERY_ID) as num_rows_in_fde
, count(distinct case when fde.IS_MATCHED then fde.DELIVERY_ID else null end) as num_matched_in_fde
, count(distinct case when tentative_assign then cds.shift_id else null end) as num_ten_assigns_in_cds
, count(distinct cds.delivery_package_ids, cds.SHIFT_ID) as num_assigns_in_cds
, count(distinct ai.SHIFT_ID) as num_assigns_in_ai
from dca
left join IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_INITIALSHIFT isc
on dca.ASSIGNMENT_RUN_ID = isc.ASSIGNMENT_RUN_ID and dca.DELIVERY_ID = isc.DELIVERY_ID
and isc.event_created_at between '{{window_start}}' and '{{window_end}}'
left join IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_OPTIMIZERCANDIDATE oca
on dca.ASSIGNMENT_RUN_ID = oca.ASSIGNMENT_RUN_ID and dca.DELIVERY_ID = oca.DELIVERY_ID
and oca.event_created_at between '{{window_start}}' and '{{window_end}}'
left join IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_FUTURE_DASHER_EVENT fde
on dca.ASSIGNMENT_RUN_ID = fde.ASSIGNMENT_RUN_ID and dca.DELIVERY_ID = fde.DELIVERY_ID
and fde.event_created_at between '{{window_start}}' and '{{window_end}}'
left join IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_CONSIDERED_DELIVERY_STATS cds
on dca.ASSIGNMENT_RUN_ID = cds.ASSIGNMENT_RUN_ID and dca.DELIVERY_ID = cds.DELIVERY_ID
and cds.event_created_at between '{{window_start}}' and '{{window_end}}'
left join IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_ASSIGNMENT_INFO_EVENT ai
on dca.ASSIGNMENT_RUN_ID = ai.ASSIGNMENT_RUN_ID and dca.DELIVERY_ID = ai.DELIVERY_ID
and ai.event_created_at between '{{window_start}}' and '{{window_end}}'
group by 1,2,3
order by 1 desc,2,3

-- Query 3: Assignment and Future Dasher
-- This tab is intended to understand why particular shift assignment is preferred over other shifts and future dashers
with dai as (
select *
from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_ASSIGNMENT_INFO_EVENT
where 1=1
AND is_prod
AND delivery_id in ({{delivery_id}})
AND event_created_at between '{{window_start}}' and '{{window_end}}'
)

, oca as (
select *
from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_OPTIMIZERCANDIDATE
where 1=1
AND is_prod
AND delivery_id in ({{delivery_id}})
AND event_created_at between '{{window_start}}' and '{{window_end}}'
)

, fde as (
select *
from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_FUTURE_DASHER_EVENT
where 1=1
AND is_prod
AND delivery_id in ({{delivery_id}})
AND event_created_at between '{{window_start}}' and '{{window_end}}'
)

select oca.event_created_at
,oca.delivery_id
,oca.assignment_run_id
,case when dai.shift_id = oca.shift_id then true else false end as is_assigned
,oca.shift_id as shift_id
,oca.composite_score
,fde.COMPOSITE_SCORE as fd_composite_score
,oca.dat_bonus
,fde.dat_bonus as fd_dat_bonus
,oca.deliverytime_bonus
,fde.delivery_time_bonus as fd_deliverytime_bonus
,oca.LATENESS_BONUS
,fde.lateness_bonus as fd_lateness_bonus
,oca.variability_score
,fde.variability_score as fd_variability_score
,fde.cutoff_timestamp as fd_cutoff_timestamp
,oca.EQUIPMENT_PRIORITY_SCORE
,oca.ROUTE_TYPE
,oca.delivery_package_ids
,oca.delivery_package_size
,oca.package_type
,oca.route
,oca.metadata_json

from oca
inner join dai on oca.delivery_id=dai.delivery_id and oca.assignment_run_id = dai.assignment_run_id
left join fde on oca.delivery_id=fde.delivery_id and oca.assignment_run_id = fde.assignment_run_id
order by EVENT_CREATED_AT desc, is_assigned desc, COMPOSITE_SCORE asc

-- Query 4: Assignment Timing
-- This tab is intended to investigate when the assignment is made and why with different timestamps for the delivery
with dca as (
SELECT event_created_at, delivery_id, assignment_run_id
, is_time_to_assign
, sp_id
, metadata_json:time_to_assign_status as orig_time_to_assign_status
, metadata_json:submission_time as order_creation_time
, desired_assignment_time
, order_ready_time
, order_ready_estimation_source
, quoted_delivery_time
, estimated_delivery_time
, estimated_pickup_time
, estimated_prep_duration
, estimated_store_prep_timestamp
, onsite_estimated_prep_time
, store_confirmed_timestamp
, store_order_ready_timestamp
, pickup_window_start_timestamp
, pickup_window_end_timestamp
, delivery_window_start_timestamp
, delivery_window_end_timestamp
, force_batch_id
, order_protocol
, post_assignment_release_type
, is_instant_assign_store
, is_instant_assign_without_confirm
, is_asap
, is_drive_delivery
, is_large_delivery
, should_not_batch
, should_not_consider_for_batch
, max_batch_size
, subtotal
, tradeoff_asap_cost
, tradeoff_asap_dasher_wait
, metadata_json:tta_conflat_buffer as tta_conflat_buffer
FROM IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_DELIVERY_CONSIDERED_FOR_ASSIGNMENT_EVENT dca

WHERE is_prod
AND event_created_at BETWEEN '{{window_start}}' AND '{{window_end}}'
AND delivery_id IN ({{delivery_id}})
ORDER BY event_created_at DESC
)

, sp_sft as (
select event_created_at, assignment_run_id, sp_id, is_shift_busy, count(distinct shift_id) as shift_cnts
from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_INITIALSHIFT
WHERE is_prod
AND event_created_at BETWEEN '{{window_start}}' AND '{{window_end}}'
AND delivery_id IN ({{delivery_id}})
AND sp_id in (
SELECT SP_ID
FROM IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_DELIVERY_CONSIDERED_FOR_ASSIGNMENT_EVENT dca
WHERE is_prod
AND event_created_at BETWEEN '{{window_start}}' AND '{{window_end}}'
AND delivery_id IN ({{delivery_id}})
)
GROUP BY 1,2,3,4
ORDER BY 1 desc, 2,3,4
)

, idle_sft as (
select event_created_at, assignment_run_id, sp_id, sum(shift_cnts) as idle_shifts
from sp_sft
where not is_shift_busy
group by 1,2,3

)

, busy_sft as (
select event_created_at, assignment_run_id, sp_id, sum(shift_cnts) as busy_shifts
from sp_sft
where is_shift_busy
group by 1,2,3

)

, oca as (
select event_created_at, assignment_run_id, delivery_id, shift_id, composite_score, LATENESS_BONUS, route_type, route
from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_OPTIMIZERCANDIDATE
where is_prod
AND event_created_at BETWEEN '{{window_start}}' AND '{{window_end}}'
AND delivery_id IN ({{delivery_id}})
ORDER BY event_created_at DESC
)

, expired_fde as (
select delivery_id, min(event_created_at) as fd_expire_time
from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_FUTURE_DASHER_EVENT
where is_prod
AND event_created_at BETWEEN '{{window_start}}' AND '{{window_end}}'
AND delivery_id IN ({{delivery_id}})
and composite_score = 3000
group by 1
)

, dd as (
select *
from dimension_deliveries
where CREATED_AT between '{{window_start}}' AND '{{window_end}}'
AND DELIVERY_ID IN ({{delivery_id}})
)

select dai.SHIFT_ID as assigned_shift_id, idle_sft.idle_shifts as num_idle_shifts_in_sp, busy_sft.busy_shifts as num_busy_shifts_in_sp,dd.created_at,dd.dasher_at_store_time, dd.actual_pickup_time, dd.actual_delivery_time
, dca.EVENT_CREATED_AT as assignment_run_time
,expired_fde.fd_expire_time as FD_EXPIRE_TIME
, dca.*, oca.composite_score as assigned_composite_score, oca.LATENESS_BONUS as assigned_lateness_bonus, oca.route_type as assigned_route_type, oca.route as assigned_route
from dca
left join IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_ASSIGNMENT_INFO_EVENT dai
on dca.ASSIGNMENT_RUN_ID = dai.ASSIGNMENT_RUN_ID and dca.DELIVERY_ID = dai.DELIVERY_ID
left join oca on dca.ASSIGNMENT_RUN_ID = oca.assignment_run_id and dca.DELIVERY_ID = oca.DELIVERY_ID and dai.shift_id = oca.shift_id and dai.route_type = oca.route_type
left join idle_sft on dca.ASSIGNMENT_RUN_ID = idle_sft.assignment_run_id and dca.sp_id = idle_sft.sp_id
left join busy_sft on dca.ASSIGNMENT_RUN_ID = busy_sft.assignment_run_id and dca.sp_id = busy_sft.sp_id
left join dd on dca.delivery_id = dd.delivery_id
left join expired_fde on expired_fde.delivery_id = dca.delivery_id
order by event_created_at desc

-- Query 5: Delivery Attributes
-- This tab is intended to understand the attributes of delivery, such as asap, no_rush, drive, etc.
SELECT
event_created_at
,delivery_id
,assignment_run_id
,is_asap
,is_no_rush
,is_drive_delivery
,is_large_delivery
,is_instant_assign_store
,is_instant_assign_without_confirm
,metadata_json:apply_exp_best_in_class_treatment as apply_exp_best_in_class_treatment
,case when order_ready_estimation_source = 'instant_assign' then true else false end as is_ort_instant_assign
,should_not_batch
,should_not_consider_for_batch
,preferred_not_batch
,case when tradeoff_asap_cost<=-79 then true else false end as is_express
,metadata_json:apply_exp_best_in_class_treatment as is_BIC
,tradeoff_asap_cost
,tradeoff_asap_dasher_wait
,max_batch_size
,force_batch_id
,min_age_requirement
,metadata_json:is_dsd as is_dsd
,metadata_json:business_vertical_id as business_vertical_id
,serviceable_vehicle_types
,sp_id
,merchant_starting_point_id
,customer_starting_point_id
,order_protocol
,post_assignment_release_type
FROM IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_DELIVERY_CONSIDERED_FOR_ASSIGNMENT_EVENT dca
WHERE 1=1
AND is_prod
AND delivery_id IN ({{delivery_id}})
AND event_created_at BETWEEN '{{window_start}}' AND '{{window_end}}'
AND on_manual_assign = false
ORDER BY event_created_at DESC

-- Query 6: ALAT (assignment latency) breakdown
set end_date = current_date;
set start_date = '2022-08-15';
set period_type = 'day';
set BUSINESS_ID = 331358;

with store_list as (
    select distinct s.id as store_id
    from doordash_merchant.public.maindb_store s where s.business_id = $business_id
        --and store_id not in (select store_id from PRODDB.STATIC.STORE_STAFFING_LOGIC)

),

dca as (
select dca.* from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_DELIVERY_CONSIDERED_FOR_ASSIGNMENT_EVENT dca
inner join store_list sl on dca.MERCHANT = sl.STORE_ID
where EVENT_CREATED_AT between $start_date and $end_date and is_prod
),

dca_last as (
select * from dca
qualify row_number() over (partition by delivery_id order by event_created_at asc) = 1
),

consider_latency as (
  select dca.DELIVERY_ID, min(dca.EVENT_CREATED_AT) as min_considered_time, any_value(dca.IS_INSTANT_ASSIGN_STORE) as is_instant_assign
  from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_DELIVERY_CONSIDERED_FOR_ASSIGNMENT_EVENT dca
  where dca.EVENT_CREATED_AT between $start_date and $end_date and (dca.is_time_to_assign is null or dca.is_time_to_assign='true')
  and dca.is_prod
  group by 1
),

solution_latency as (
  select cds.DELIVERY_ID, min(cds.EVENT_CREATED_AT) as min_solution_time
  from IGUAZU.SERVER_EVENTS_PRODUCTION.DEEPRED_CONSIDERED_DELIVERY_STATS cds
  where cds.EVENT_CREATED_AT between $start_date and $end_date and cds.is_prod
  group by 1
),

data as (
select dd.DELIVERY_ID
, CREATED_AT
, case when dd.is_asap then datediff('seconds', dd.created_at, csl.min_considered_time) end as considerlatency
, case when dd.is_asap then datediff('seconds', dd.created_at, sl.min_solution_time) end as solulatency
, case when dd.is_asap then datediff('seconds', dd.created_at, dd.first_assignment_made_time) end as alat
, datediff('seconds', dd.first_assignment_made_time, dd.dasher_assigned_time) as acceptlat
, datediff('seconds', dd.first_assignment_made_time, dd.dasher_confirmed_time) as conflat
from PRODDB.PUBLIC.DIMENSION_DELIVERIES dd
inner join store_list stl on dd.STORE_ID = stl.STORE_ID
left join consider_latency csl on csl.delivery_id=dd.delivery_id
left join solution_latency sl on sl.delivery_id=dd.DELIVERY_ID
where dd.CREATED_AT between $start_date and $end_date
)

select
date_trunc('day', created_at) as day
, avg(considerlatency) as considerlatency
, avg(solulatency) as solulatency
, avg(CONFLAT) as conflat
, avg(alat) as alat
from data
group by 1
order by 1